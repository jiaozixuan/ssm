<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd

       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd

       http://www.springframework.org/schema/tx
       https://www.springframework.org/schema/tx/spring-tx.xsd

       http://mybatis.org/schema/mybatis-spring
       https://mybatis.org/schema/mybatis-spring.xsd

       http://www.springframework.org/schema/aop
       https://www.springframework.org/schema/aop/spring-aop.xsd

       http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task.xsd

       http://www.springframework.org/schema/mvc
       https://www.springframework.org/schema/mvc/spring-mvc.xsd
">
    <!-- 自动扫描包配置 -->
    <context:component-scan base-package="com.jiaozx"/>

    <!-- AOP切面自动代理配置 -->
    <aop:aspectj-autoproxy />

    <!-- Spring线程池驱动配置 -->
    <task:annotation-driven executor="myTaskAsyncPool"/>
    <bean class="com.jiaozx.configuration.ThreadPoolConfiguration" />

    <!-- Swagger 配置类注入 -->
    <bean class="com.jiaozx.configuration.SwaggerConfiguration"/>
    <!-- 静态资源处理（适用于前后端分离项目） -->
    <mvc:resources mapping="/swagger/**" location="/swagger/"/>

    <!-- 文件上传解析器配置 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置默认字符编码 -->
        <property name="defaultEncoding" value="utf-8"/>
        <!-- 最大上传文件大小限制（10MB） -->
        <property name="maxUploadSize" value="10485760"/>
        <!-- 内存中最大缓存大小 -->
        <property name="maxInMemorySize" value="40960"/>
    </bean>

    <!-- Spring MVC 映射处理器 -->
    <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/>
    <!-- 控制器适配器 -->
    <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>
    <!-- 视图解析器（当前项目未使用） -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" id="internalResourceViewResolver">
        <!-- 页面前缀路径 -->
        <property name="prefix" value="/WEB-INF/"/>
        <!-- 页面后缀格式 -->
        <property name="suffix" value=".jsp"/>
        <!-- 解析顺序优先级 -->
        <property name="order" value="10"/>
    </bean>

    <!-- 全局异常处理器（已注释） -->
    <!-- <bean class="com.ydlclass.handler.GlobalExceptionResolver"/> -->

    <!-- 自定义 Jackson 序列化对象 -->
    <bean id="customObjectMapper" class="com.jiaozx.configuration.CustomObjectMapper"/>
    <!-- 启用 MVC 注解支持 -->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <!-- 使用自定义 ObjectMapper -->
                <property name="objectMapper" ref="customObjectMapper"/>
                <!-- 支持的媒体类型 -->
                <property name="supportedMediaTypes">
                    <list>
                        <value>text/plain;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <!-- 登录拦截器 -->
        <mvc:interceptor>
            <!-- 拦截所有请求 -->
            <mvc:mapping path="/**"/>
            <!-- 排除不拦截的路径 -->
            <mvc:exclude-mapping path="/login"/>
            <mvc:exclude-mapping path="/logout"/>
            <mvc:exclude-mapping path="/swagger"/>
            <!-- 引用登录拦截器实现 -->
            <bean id="loginInterceptor" class="com.jiaozx.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <!-- 重复提交拦截器 -->
        <mvc:interceptor>
            <!-- 拦截所有请求 -->
            <mvc:mapping path="/**"/>
            <!-- 引用重复提交拦截器实现 -->
            <bean id="repeatInterceptor" class="com.jiaozx.interceptor.RepeatInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- 启用默认Servlet处理静态资源 -->
    <mvc:default-servlet-handler/>

    <!-- MyBatis Mapper 扫描 -->
    <mybatis:scan base-package="com.jiaozx.dao"/>

    <!-- 加载数据库配置文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <!-- 数据源配置（Druid连接池） -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${url}"/>
        <property name="driverClassName" value="${driverName}"/>
        <property name="username" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>

    <!-- SQL会话工厂配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/**/*.xml"/>
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <!-- 控制台日志输出 -->
                <property name="logImpl" value="org.apache.ibatis.logging.stdout.StdOutImpl"/>
                <!-- 开启驼峰命名转下划线 -->
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>

    <!-- 事务管理器配置 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 声明式事务配置 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!-- 只读事务方法 -->
            <tx:method name="get*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="select*" read-only="true" propagation="SUPPORTS"/>
            <!-- 写操作事务方法 -->
            <tx:method name="update*" read-only="false" propagation="REQUIRED"/>
            <tx:method name="delete*" read-only="false" propagation="REQUIRED"/>
            <tx:method name="insert*" read-only="false" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- Redis 连接池配置 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="host" value="127.0.0.1"/>
        <constructor-arg name="port" value="6379"/>
        <property name="minIdle" value="20"/>
        <property name="maxIdle" value="30"/>
        <property name="maxTotal" value="200"/>
    </bean>

</beans>